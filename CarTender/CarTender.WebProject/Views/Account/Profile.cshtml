@using CarTender.BusinessAccess
@model CarTender.BusinessData.SH_User
@{
    ViewBag.Title = "Profilim";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript" data-selector="modalContainer">
    function GetCityId() {
        return {
            CityNumber: $('#city').data('kendoDropDownList').dataItem().CityNumber
        };
    }

    $(document)

        .on('change', '#password, #rePassword', function () {

            if (($('#password').val() + $('#rePassword').val()) != '' && ($('#password').val() + $('#rePassword').val()) != null) {
                $('#password, #rePassword').attr('required', 'required');
            } else {
                $('#password, #rePassword').removeAttr('required', 'required');
            }

        });

</script>

<style type="text/css">
    /*.btn span.glyphicon {
        opacity: 0;
    }

    .btn.active span.glyphicon {
        opacity: 1;
    }

    .badgebox {
        opacity: 0;
    }

        .badgebox + .badge {
            text-indent: -999999px;
            width: 27px;
        }

        .badgebox:focus + .badge {
            box-shadow: inset 0px 0px 5px;
        }

        .badgebox:checked + .badge {
            text-indent: 0;
        }*/
</style>

@using (Html.BeginForm("Update", "Account", FormMethod.Post, new Dictionary<string, object>() {
    { "class", "form-horizontal" },
    { "role", "form" },
    { "data-selector", "modalContainer" },
    { "data-formType", "Ajax" }
}))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.id)
    @Html.HiddenFor(model => model.idcode)


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="firstname">Ad</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.firstname, new Dictionary<string, object>()
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen ad giriniz.."},
                {"disabled","disabled" }
            }).Validate(Validations.TextTurkceSpace(true))
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="lastname">Soyad</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.lastname, new Dictionary<string, object>()
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen soyad giriniz"},
                {"disabled","disabled" }
            }).Validate(Validations.TextTurkce(true))
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="title">Ünvan</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.title, new Dictionary<string, object>()
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen ünvan giriniz.."},
            }).Validate(Validations.TextTurkceSpace(true))
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="tckimlikno">TC Kimlik No</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.tckimlikno, new Dictionary<string, object>()
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen TC kimlik no giriniz.."},
                {"disabled","disabled" }
            }).Validate(Validations.TCKimlik)
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="birthday">Doğum Tarihi</label>
        </div>
        <div class="col-md-8">
            @(Html.Kendo().DatePickerFor(model => model.birthday).HtmlAttributes(new Dictionary<string, object>()
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen doğum tarihi giriniz.."},
                {"disabled","disabled" }
            }).Format(Extensions.DateFormatShort())
            .Validate(Validations.Required)
            )
        </div>
    </div>




    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="loginname">Kullanıcı Adı</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.loginname, new Dictionary<string, object>()
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen kullanıcı adı giriniz.."},
                {"disabled","disabled" }
            }).Validate(Validations.UserName(true))
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="email">Eposta Adresi</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.email, new Dictionary<string, object>()
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen eposta adresi giriniz.."},
                //{"data-validateurl",Url.Action("ValidateTc","VWSH_User",new {area="SH" }) },
            }).Validate(Validations.EMail(true))
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="password">Şifre</label>
        </div>
        <div class="col-md-8">
            @Html.PasswordFor(model => model.password, new Dictionary<string, object>()
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen şifrenizi giriniz.."}
            }).Validate(Validations.Password(false))
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="password">Şifre Tekrar</label>
        </div>
        <div class="col-md-8">
            @Html.Password("rePassword", "", new Dictionary<string, object>()
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen şifrenizi tekrar giriniz.."},
            }).Validate(Validations.PasswordMatch("#password", false))
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="phone">Telefon</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.phone, new Dictionary<string, object>()
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen telefon giriniz.."},
            }).Validate(Validations.TelefonNo(true))
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="cellphone">Cep Telefonu</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.cellphone, new Dictionary<string, object>()
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen cep telefonu giriniz.."},
            }).Validate(Validations.TelefonNo(true))
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="city">Şehir</label>
        </div>
        <div class="col-md-8">
            @(Html.Kendo().DropDownListFor(model => model.city).HtmlAttributes(new Dictionary<string, object>()
            {
                {"style", "width:100%"},
                {"class", "form-control"},
            })
            .Filter(FilterType.Contains)
            .OptionLabel("Lütfen Şehir Seçiniz..")
            .DataTextField("Name")
            .DataValueField("Id")
            .DataSource(s =>
            {
                s.Read(r =>
                {
                    r.Action("GetUT_City", "General", new { area = string.Empty }); //General controllerının içine datasının oldugu metodu yaz ilk parametreye method ismini ver
                });
            }).Validate(Validations.Required)
            )

        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="town">İlçe</label>
        </div>
        <div class="col-md-8">
            @(Html.Kendo().DropDownListFor(model => model.town).HtmlAttributes(new Dictionary<string, object>()
            {
                {"style", "width:100%"},
                {"class", "form-control"},
            })
            .Filter(FilterType.Contains)
            .OptionLabel("Lütfen İlçe Seçiniz..")
            .DataTextField("Name")
            .DataValueField("Id")
            .DataSource(s =>
            {
                s.Read(r =>
                {
                    r.Action("GetUT_TownByCityNumber", "General", new { area = string.Empty }).Data("GetCityId"); //General controllerının içine datasının oldugu metodu yaz ilk parametreye method ismini ver
                })
                .ServerFiltering(true);
            })
            .CascadeFrom("city")
            .Validate(Validations.Required)
            )
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="address">Adres</label>
        </div>
        <div class="col-md-8">
            @Html.TextAreaFor(model => model.address, new Dictionary<string, object>()
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen adres giriniz.."},
            }).Validate(Validations.Adres(true))
        </div>
    </div>

    <div class="buttons">
        <button class="btn btn-md btn-danger pull-left" data-task="modalClose">Geri</button>
        <button class="btn btn-md btn-success pull-right" type="submit">Kaydet</button>
    </div>
}




